{"version":3,"sources":["views/HomePage.js","views/LoginPage.js","views/RegisterPage.js","Sidebar/SidebarData.js","views/Header.js","Sidebar/Profile.js","Sidebar/Tier.js","Sidebar/Point.js","Sidebar/Pointcg.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","props","console","log","modal","user","style","display","justifyContent","alignItems","width","height","to","onClick","localStorage","removeItem","history","push","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","axios","defaults","withCredentials","useStyles","makeStyles","theme","paper","flexDirection","avatar","margin","spacing","backgroundColor","palette","secondary","main","form","marginTop","submit","alignitems","justifycontent","position","useState","username","setUserName","Password","setPassword","classes","useHistory","onSubmitHandler","e","a","preventDefault","data","password","fetch","method","headers","body","JSON","stringify","then","res","json","token","userHasAuthenticated","setModal","alert","catch","error","Container","component","maxWidth","className","Avatar","onSubmit","Grid","container","item","xs","sm","TextField","id","required","fullWidth","label","autoFocus","value","onChange","currentTarget","type","FormControlLabel","control","Checkbox","Button","justify","Box","mt","email","setEmail","first_name","setName","ConfirmPasword","setConfirmPasword","phonenum","setPhone","SidebarDate","title","path","icon","cName","Header","sidebar","setSidebar","showSidebar","userprofile","setUserprofile","userPhoto","setUserPhoto","currentUser_pk","setCurrentUser_pk","useEffect","Authorization","getItem","userData","photo","user_id","undefined","src","alt","map","index","window","location","reload","Profile","sendData","infoModal","setInfomodal","nicknmaModal","setNickname","pointModal","gradeModal","userId","setUserId","userNickname","setUserNickname","userPoint","setUserPoint","userGrade","setUserGrade","userIntro","setUserIntro","userTier","setUserTier","userUsername_info","setUserName_info","userEmail_info","setUserEmail_info","userNumber","setUserNumber","userName","nickname","point","grade","myIntro","Tier","username_info","email_info","name","number","handleSubmit","form_data","FormData","append","response","htmlFor","accept","reader","FileReader","file","target","files","onloadend","result","readAsDataURL","fileField","document","querySelector","handleImageSubmit","go","maxlength","placeholder","confirm","handleLogout","tier","handleEffect","root","size","startIcon","Fab","aria-label","extendedIcon","Point","ul","padding","listStyle","appBar","borderBottom","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","heroContent","cardHeader","grey","cardPricing","marginBottom","footer","borderTop","paddingTop","paddingBottom","breakpoints","up","tiers","price","description","buttonText","buttonVariant","subheader","Pointcg","Fragment","gutterBottom","md","Card","CardHeader","titleTypographyProps","subheaderTypographyProps","action","CardContent","line","CardActions","App","setUser","isAuthenticated","setisAuthenticated","authenticated","setItem","exact","Sidebarmenu","Boolean","hostname","match","baseURL","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.20bfd0ea.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction HomePage(props) {\r\n  const onClickHandler = () => {\r\n    //useDispatch를 사용해서 로그아웃 액션을 실행한다\r\n    //useDispatch와 logout 액션이 두가지 필요하다\\\r\n    localStorage.removeItem('token');\r\n    props.history.push(\"/login\");\r\n  }\r\n  console.log(props.modal);\r\n  console.log(props.user);\r\n  return (\r\n    \r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n      }}>\r\n      <h2>시작 페이지</h2>\r\n      <>\r\n      {\r\n        \r\n        props.modal === false\r\n        ? <Link to=\"/login\"><button>로그인</button></Link>\r\n        : (\r\n            <button onClick={onClickHandler}>로그아웃</button>\r\n        )\r\n        \r\n      }\r\n      </>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(HomePage);","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useHistory } from 'react-router'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n// import { useDispatch } from \"react-redux\";\r\n// import { loginUser } from \"../_action/userAction\";\r\nimport axios from \"axios\";\r\naxios.defaults.withCredentials = true;\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"/\">\r\n        LoLtopia\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n }\r\n\r\n const useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n  \r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '400px', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  submit: {\r\n    display: 'flex',\r\n    alignitems: 'center',\r\n    justifycontent: 'center',\r\n    position: 'relative',\r\n    margin: theme.spacing(2, 0, 2),\r\n  },\r\n }));\r\n\r\n\r\nfunction LoginPage(props) {\r\n  // const dispatch = useDispatch();\r\n  const [username, setUserName] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const onUserNameHandler = (e) => {\r\n    setUserName(e.currentTarget.value);\r\n  };\r\n  const onPasswordHanlder = (e) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n\r\n  const onSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    //로그인을 진행하기위해서\r\n    //첫번째 useDispatch(액션) 을 활용해서 액션을 dispatch해준다\r\n    const data = {\r\n      username: username,\r\n      password: Password,\r\n    };\r\n    await fetch('http://39.118.174.168:8000/api/login/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      if (json.user && json.user.username && json.token) {\r\n        props.userHasAuthenticated(\r\n          true, \r\n          json.user.username,\r\n          json.token);\r\n        history.push('/');\r\n        props.setModal(true);\r\n        console.log(json);\r\n      \r\n      } else {\r\n        alert(\"아이디 또는 비밀번호를 확인해주세요.\")\r\n      }\r\n    }).catch(error => alert(error));\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    // <div\r\n    //   style={{\r\n    //     display: \"flex\",\r\n    //     justifyContent: \"center\",\r\n    //     alignItems: \"center\",\r\n    //     width: \"100%\",\r\n    //     height: \"100%\",\r\n    //   }}>\r\n    //   <form\r\n    //     onSubmit={onSubmitHandler} method=\"POST\"\r\n    //     style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n    //     <label>ID</label>\r\n    //     <input type=\"username\" value={username} onChange={onUserNameHandler} />\r\n    //     <label>Password</label>\r\n    //     <input type=\"password\" value={Password} onChange={onPasswordHanlder} />\r\n    //     <br />\r\n    //     <button type=\"submit\">Login</button>\r\n    //   </form>\r\n    // </div>\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        \r\n        <Typography component=\"h1\"  variant=\"h5\">\r\n        로그인\r\n        </Typography>\r\n\r\n\r\n      <form onSubmit={onSubmitHandler}>\r\n      <Grid container spacing={2}>\r\n\r\n      <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                id=\"id\"\r\n                required\r\n                fullWidth\r\n                label=\"아이디\"\r\n                autoFocus\r\n                value={username}\r\n                onChange={onUserNameHandler}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                required\r\n                fullWidth\r\n                label=\"비밀번호(8자 이상)\"\r\n                autoFocus\r\n                value={Password} \r\n                onChange={onPasswordHanlder}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"아이디 저장\"\r\n              />\r\n              </Grid>\r\n              </Grid>\r\n        \r\n        <Button type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                \r\n                >로그인</Button>\r\n\r\n                <Grid container justify=\"flex-end\">\r\n                  <Grid item>\r\n                     <Link href=\"/register\" variant=\"body2\">\r\n                      아이디가 없으시다면 회원가입 하세요 \r\n                      </Link>\r\n                  </Grid>\r\n                </Grid>\r\n      </form>\r\n    </div>\r\n    <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n      </Container>\r\n  );\r\n  \r\n}\r\n\r\nexport default withRouter(LoginPage);","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"/\">\r\n        LoLtopia\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    \r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '400px', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  submit: {\r\n    display: 'flex',\r\n    alignitems: 'center',\r\n    justifycontent: 'center',\r\n    position: 'relative',\r\n    margin: theme.spacing(2, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\n\r\nfunction RegisterPage(props) {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [first_name, setName] = useState(\"\");\r\n  const [ConfirmPasword, setConfirmPasword] = useState(\"\");\r\n  const [phonenum, setPhone] = useState(\"010\");\r\n  const [username, setUserName] = useState(\"\");\r\n\r\n\r\n  const onUserNameHandler = (e) => {\r\n    setUserName(e.currentTarget.value);\r\n  };\r\n\r\n  const onPasswordHanlder = (e) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n\r\n  const onConfirmPasswordHandler = (e) => {\r\n    setConfirmPasword(e.currentTarget.value);\r\n  };\r\n  \r\n  const onNameHandler = (e) => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n\r\n\r\n  const onPhonenumHandler = (e) => {\r\n    setPhone(e.currentTarget.value);\r\n  };\r\n\r\n  const onEmailHandler = (e) => {\r\n    setEmail(e.currentTarget.value);\r\n  };\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password === ConfirmPasword) {\r\n        const body = {\r\n            username: username,\r\n            password : password,\r\n            first_name : first_name,\r\n            phonenum : phonenum,\r\n            email : email,\r\n        };\r\n    fetch('http://39.118.174.168:8000/api/register/', {\r\n      method: 'POST',\r\n      headers:{\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body : JSON.stringify(body)\r\n    }).then(res => res.json())\r\n    .then(json => {\r\n      if (json.username && json.token) {\r\n        alert(\"가입이 정상적으로 완료되었습니다.\");\r\n        props.userHasAuthenticated(true, json.username, json.token);\r\n        props.history.push(\"/login\");\r\n        props.setModal(true);\r\n      }else{\r\n        alert(\"사용불가능한 아이디입니다.\")\r\n      }\r\n    }).catch(error => alert(error));\r\n    } else{\r\n        alert(\"비밀번호가 일치하지 않습니다.\");\r\n      }\r\n  };\r\n\r\n\r\n  return (\r\n\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        \r\n        <Typography \r\n        component=\"h1\" \r\n        variant=\"h5\"\r\n        >\r\n        무료 회원가입\r\n        </Typography>\r\n\r\n\r\n      <form onSubmit={onSubmitHandler}>\r\n      <Grid container spacing={2}>\r\n\r\n      <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                label=\"아이디\"\r\n                autoFocus\r\n                value={username}\r\n                onChange={onUserNameHandler}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                required\r\n                fullWidth\r\n                label=\"비밀번호(8자 이상)\"\r\n                autoFocus\r\n                value={password} \r\n                onChange={onPasswordHanlder}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                type=\"password\"\r\n                fullWidth\r\n                label=\"비밀번호 확인\"\r\n                autoFocus\r\n                value={ConfirmPasword} \r\n                onChange={onConfirmPasswordHandler}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                label=\"전화번호\"\r\n                autoFocus\r\n                value={phonenum} \r\n                onChange={onPhonenumHandler}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                label=\"이름\"\r\n                autoFocus\r\n                value={first_name} \r\n                onChange={onNameHandler}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                label=\"이메일\"\r\n                autoFocus\r\n                value={email} \r\n                onChange={onEmailHandler}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label=\"양경모의 고추는 3cm 입니다!\"\r\n              />\r\n              </Grid>\r\n              </Grid>\r\n        \r\n        <Button type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                >회원 가입</Button>\r\n\r\n\r\n\r\n                <Grid container justify=\"flex-end\">\r\n                  <Grid item>\r\n                     <Link href=\"/login\" variant=\"body2\">\r\n                      이미 회원이시라면 로그인 하세요! \r\n                      </Link>\r\n                  </Grid>\r\n                </Grid>\r\n      </form>\r\n    </div>\r\n    <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default withRouter(RegisterPage);\r\n\r\n","import React from 'react'\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport * as GrIcons from 'react-icons/gr';\r\n\r\nexport const SidebarDate = [\r\n    // {\r\n    //     title: '닉네임',\r\n    //     path: '/',\r\n    //     icon: <FaIcons.FaUserCircle />,\r\n    //     cName: 'nav-text'\r\n    // },\r\n    {\r\n        title: '내정보',\r\n        path: '/Profile',\r\n        icon: <FaIcons.FaUserCog />,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: '메세지',\r\n        path: '/products',\r\n        icon: <FaIcons.FaRegComments />,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: '포인트',\r\n        path: '/Point',\r\n        icon: <GrIcons.GrMoney />,\r\n        cName: 'nav-text'\r\n    },\r\n    {\r\n        title: '게임 기록',\r\n        path: '/messages',\r\n        icon: <FaIcons.FaEnvelopeOpenText />,\r\n        cName: 'nav-text'\r\n    },\r\n]","import React, { useState, useEffect} from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport {Link} from 'react-router-dom';\r\nimport { SidebarDate } from '../Sidebar/SidebarData';\r\nimport './Header.css';\r\nimport '../Sidebar/Sidebar.css';\r\n\r\n\r\nfunction Header(props){\r\n    const [sidebar,setSidebar] = useState(false);\r\n    const showSidebar = () => setSidebar(!sidebar);\r\n    const history = useHistory();\r\n    let [userprofile, setUserprofile] = useState(false);\r\n    let [userPhoto, setUserPhoto] = useState();\r\n    let [currentUser_pk, setCurrentUser_pk] = useState();\r\n\r\n    const onClickHandler = () => {\r\n    //useDispatch를 사용해서 로그아웃 액션을 실행한다\r\n    //useDispatch와 logout 액션이 두가지 필요하다\\\r\n    localStorage.removeItem('token');\r\n    history.push('/');\r\n    window.location.reload();\r\n  }\r\n\r\n  // setTimeout(() => console.log(\"start\"), 10000);\r\n  // if(props.modal === true){\r\n  //     console.log(\"reload\");\r\n  //     window.location.reload();\r\n  // } else {}\r\n\r\n  useEffect(()=>{\r\n        fetch('http://39.118.174.168:8000/api/current_user/', {\r\n        headers: {\r\n            Authorization: `JWT ${localStorage.getItem('token')}`\r\n        }\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      // 현재 유저 정보 받아왔다면, 로그인 상태로 state 업데이트 하고\r\n        if (json.id) {\r\n            console.log(json.id)\r\n        //유저정보를 받아왔으면 해당 user의 프로필을 받아온다.\r\n        }fetch('http://39.118.174.168:8000/api/profile/' + json.id + '/update/',{\r\n        method : 'PATCH',\r\n        headers: {\r\n            Authorization: `JWT ${localStorage.getItem('token')}`\r\n        },\r\n        })\r\n        .then((res)=>res.json())\r\n        .then((userData)=> {\r\n            setUserPhoto(userData.photo)\r\n            setCurrentUser_pk(userData.user_id)\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n          });\r\n    }).catch(error => {\r\n        console.log(error)\r\n    });\r\n    },[userPhoto])\r\n\r\n\r\n    \r\n\r\n    return(\r\n    <>\r\n        <div className=\"header\">\r\n        <div className=\"header-nav\">\r\n        <div className=\"header-nav-links\">  \r\n            {\r\n              props.modal === false || props.modal === null || props.modal === undefined\r\n              ? (\r\n              <>\r\n              <Link to=\"/login\"><button className=\"header-btns\">로그인</button></Link>\r\n              <Link to=\"/register\"><button className=\"header-btns\">회원가입</button></Link>\r\n              </>\r\n              )\r\n              : (\r\n                <>\r\n                 <Link  to=\"/write\"><button className=\"header-dashboards\">New write</button></Link>\r\n                    <div className=\"user-container\" onClick={()=>{setUserprofile(!userprofile)}}>\r\n                    <img src={userPhoto} className=\"user-image\" onClick={showSidebar} alt=\"/\"></img>\r\n                    </div>\r\n                      <nav className={sidebar ? 'nav-menu active' : 'nav-menu'}>\r\n                        <ul className='nav-menu-items' onClick={showSidebar}>\r\n                          <li className=\"navbar-toggle\">\r\n                            <Link to='#' className='menu-bars' />   \r\n                          </li>\r\n                    {SidebarDate.map((item, index) => {\r\n                       return (\r\n                        <>\r\n                          <li key={index} className={item.cName}>\r\n                            <Link to={item.path}>\r\n                              {item.icon}\r\n                              <span>\r\n                                {item.title}\r\n                              </span>\r\n                              \r\n                            </Link>\r\n                          </li>\r\n                          \r\n                        </>\r\n                       )\r\n                    })}\r\n                    \r\n                     \r\n                  <button className=\"logout\" onClick={onClickHandler}>로그 아웃</button>\r\n                 \r\n                      \r\n                   \r\n                        </ul>\r\n                        </nav>\r\n                {\r\n                  userprofile && currentUser_pk === true\r\n                  ?(\r\n                   <>\r\n                   </>\r\n                  )\r\n                  :null\r\n                }\r\n                </>\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header;","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from \"react-router-dom\";\r\nimport './Profile.css'\r\n// 모달쓰기위한 \r\nfunction Profile(props){\r\n    const history = useHistory()\r\n    let [infoModal, setInfomodal] = useState(false)\r\n    let [nicknmaModal, setNickname] = useState(false)\r\n    let [pointModal] = useState(false)\r\n    let [gradeModal] = useState(false)\r\n    // let [tier] = useState(false) 티어\r\n    // let [username_info] = useState(false) 아이디\r\n    // let [email_info] = useState(false) 이메일 \r\n    // let [number] = useState(false) 번호\r\n    // let [name] = useState(false) 이름\r\n    \r\n//profile[테이블에서 정보 받아옴]\r\n    let [userId, setUserId] = useState()\r\n    let [userPhoto, setUserPhoto] = useState()\r\n    let [userNickname, setUserNickname] = useState(\"\")\r\n    let [userPoint, setUserPoint] = useState()\r\n    let [userGrade,  setUserGrade] = useState()\r\n    let [userIntro, setUserIntro] = useState()\r\n    let [userTier, setUserTier] = useState()\r\n    let [userUsername_info, setUserName_info] = useState()\r\n    let [userEmail_info, setUserEmail_info] = useState()\r\n    let [userNumber, setUserNumber] = useState()\r\n    let [userName, setUserName] = useState()\r\n\r\n    useEffect(()=>{\r\n        fetch('http://39.118.174.168:8000/api/current_user/', {\r\n          headers: {\r\n            Authorization: `JWT ${localStorage.getItem('token')}`\r\n          }\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n          // 현재 유저 정보 받아왔다면, 로그인 상태로 state 업데이트 하고\r\n          if (json.id) {\r\n            setUserId(json.id)\r\n            //유저정보를 받아왔으면 해당 user의 프로필을 받아온다.\r\n        }fetch('http://39.118.174.168:8000/api/profile/' + json.id + '/update/',{\r\n                method : 'PATCH',\r\n                headers: {\r\n                    Authorization: `JWT ${localStorage.getItem('token')}`\r\n                },\r\n            })\r\n            .then((res)=>res.json())\r\n            // 데이터베이스에서 가져오는 정확한 명\r\n            .then((userData)=> {\r\n                setUserPhoto(userData.photo)\r\n                setUserNickname(userData.nickname)\r\n                setUserPoint(userData.point)\r\n                setUserGrade(userData.grade)\r\n                setUserIntro(userData.myIntro)\r\n                setUserTier(userData.Tier)\r\n                setUserName_info(userData.username_info)\r\n                setUserEmail_info(userData.email_info)\r\n                setUserName(userData.name)\r\n                setUserNumber(userData.number)\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n              });;\r\n        }).catch(error => {\r\n            console.log(error)\r\n          });\r\n    },[userId])\r\n\r\n    let sendData;\r\n    const handleEffect = (handleSubmit) => {\r\n        sendData = {\r\n            point : userPoint,\r\n            nickname : userNickname,\r\n            grade : userGrade,\r\n            myIntro : userIntro,\r\n            username_info : userUsername_info,\r\n            email_info : userEmail_info,\r\n            name : userName,\r\n            number : userNumber,\r\n            tier : userTier\r\n        }\r\n        handleSubmit()\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        let form_data = new FormData();\r\n        form_data.append('point', sendData.point);\r\n        form_data.append('nickname', sendData.nickname);\r\n        form_data.append('grade', sendData.grade);\r\n        form_data.append('myIntro', sendData.myIntro);\r\n        fetch('http://39.118.174.168:8000/api/profile/' + userId + '/update/', {\r\n            method : 'PATCH',\r\n            headers: {\r\n                Authorization : `JWT ${localStorage.getItem('token')}`,\r\n            },\r\n            body : form_data\r\n        })\r\n        .then(res => res.json())\r\n        .catch(error => console.error('Error:', error))\r\n        .then(response => console.log('Success:', JSON.stringify(response)));\r\n    };\r\n\r\n    const handleImageSubmit = () => {\r\n        let form_data = new FormData();\r\n        let fileField = document.querySelector('input[type=\"file\"]');\r\n        form_data.append('photo', fileField.files[0])\r\n\r\n        fetch('http://39.118.174.168:8000/api/profile/' + userId + '/update/', {\r\n            method : 'PATCH',\r\n            headers: {\r\n                Authorization : `JWT ${localStorage.getItem('token')}`,\r\n            },\r\n            body : form_data\r\n        })\r\n        .then(res => res.json())\r\n        .catch(error => console.error('Error:', error))\r\n        .then(response => {alert('이미지 저장의 성공하셨습니다', response)})\r\n    };\r\n\r\n    const DeleteUser = ()=>{\r\n        if(window.confirm('정말 삭제하시겠습니까 ?')===true){\r\n            fetch('http://39.118.174.168:8000/api/current_user/', {\r\n                headers: {\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n                }\r\n            })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                fetch('http://39.118.174.168:8000/api/profile/' + json.id + '/delete/',{\r\n                    method : 'DELETE',\r\n                    headers: {\r\n                        Authorization: `JWT ${localStorage.getItem('token')}`,\r\n                    },\r\n                })\r\n                .then((res)=>res.json())\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    });;\r\n            }).catch(error => {\r\n                console.log(error)\r\n            });\r\n            props.handleLogout()\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <main className=\"profile-main\">\r\n                <section className=\"section1\">\r\n                    <div className=\"thumbnail__\">\r\n                        <img src={userPhoto} alt=\"\"></img>\r\n                        <label htmlFor=\"file\" className=\"img-up\">\r\n                            <input type=\"file\" id=\"file\" accept=\".jpg, .png, .jpeg, .gif\" onChange={(e)=>{\r\n                                e.preventDefault();\r\n                                let reader = new FileReader();\r\n                                let file = e.target.files[0];\r\n                                reader.onloadend = () => {\r\n                                setUserPhoto(reader.result)\r\n                                }\r\n                                reader.readAsDataURL(file);\r\n                            }}></input>\r\n                        이미지 업로드</label>\r\n                        <button className=\"img-de\" onClick={()=>{\r\n                            handleImageSubmit()\r\n                            setInfomodal(false)\r\n                            setNickname(false)\r\n                            history.go(0)\r\n                        }}>저장</button>\r\n                    </div>\r\n                    <div className=\"profile-info\">\r\n                        {\r\n                            infoModal === true\r\n                            ?(\r\n                                <form>\r\n                                    <input maxlength=\"50\"value={userIntro} placeholder={userIntro} onChange={(e)=>{\r\n                                        setUserIntro(e.target.value)\r\n                                    }}></input>\r\n                                </form>\r\n                            )\r\n                            :(\r\n                                <>\r\n                                <h2>{userIntro}</h2>\r\n                                <button className=\"fix-buttons\" onClick={()=>{\r\n                                    setInfomodal(true)\r\n                                }}>자기소개 수정</button>\r\n                                </>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </section>\r\n                             \r\n                <section className=\"section2\">  \r\n                    <div className=\"myProfile\">\r\n                        <div className=\"wrapper\">\r\n                            <div className=\"title-wrapper\">\r\n                                <h3>닉네임</h3>\r\n                            </div>\r\n                            <div className=\"block-for-mobile\">\r\n                                {\r\n                                    nicknmaModal === true\r\n                                    ?null\r\n                                    :<div className=\"contents\">{userNickname}</div>\r\n                                }\r\n                                    \r\n                                {\r\n                                    nicknmaModal === true\r\n                                    ?(\r\n                                        <form className=\"nickname-form\">\r\n                                            <input className=\"nickname-input\" placeholder={userNickname} onChange={(e)=>{\r\n                                                setUserNickname(e.target.value)\r\n                                            }}></input>\r\n                                        </form>\r\n                                        \r\n                                    )\r\n                                    :(\r\n                                        <div className=\"edit-wrapper\">\r\n                                            <button className=\"fix-button\" onClick={()=>{setNickname(true)}}>수정</button>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n                                \r\n                    <div className=\"myProfile\">\r\n                        <div className=\"wrapper\">\r\n                            <div className=\"title-wrapper\">\r\n                                <h3>티어</h3>\r\n                            </div>\r\n                            <div className=\"block-for-mobile\">\r\n                                <div className=\"contents\">{userTier}</div>   \r\n                                {\r\n                                    pointModal === true\r\n                                    ?(\r\n                                        <form className=\"nickname-form\">\r\n                                            <input className=\"nickname-input\" placeholder={\"\"} onChange={(e)=>{\r\n                                                setUserTier(e.target.value)\r\n                                            }}></input>\r\n                                        </form>\r\n                                        \r\n                                    )\r\n                                    :(  <Link to=\"tier\">\r\n                                        <div className=\"edit-wrapper\">\r\n                                            <button className=\"fix-button\">티어인증</button>\r\n                                        </div>\r\n                                        </Link>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n              \r\n                    <div className=\"myProfile\">\r\n                        <div className=\"wrapper\">\r\n                            <div className=\"title-wrapper\">\r\n                                <h3>point</h3>\r\n                            </div>\r\n                            <div className=\"block-for-mobile\">\r\n                                    <div className=\"contents\">{userPoint}</div>\r\n                                {\r\n                                    pointModal === true\r\n                                    ?(\r\n                                        <form className=\"nickname-form\">\r\n                                            <input className=\"nickname-input\" placeholder={\"\"} onChange={(e)=>{\r\n                                                setUserPoint(e.target.value)\r\n                                            }}></input>\r\n                                        </form>\r\n                                        \r\n                                    )\r\n                                    :(\r\n                                        <Link to=\"pointcg\">\r\n                                        <div className=\"edit-wrapper\">\r\n                                            <button className=\"fix-button\">충전하기</button>\r\n                                        </div>\r\n                                        </Link>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n\r\n                    <div className=\"myProfile\">\r\n                        <div className=\"wrapper\">\r\n                            <div className=\"title-wrapper\">\r\n                                <h3>등급</h3>\r\n                            </div>\r\n                            <div className=\"block-for-mobile\">\r\n                                    <div className=\"contents\">{userGrade}</div>\r\n                                {\r\n                                    gradeModal === true\r\n                                    ?(\r\n                                        <form className=\"nickname-form\">\r\n                                            <input className=\"nickname-input\" placeholder={\"\"} onChange={(e)=>{\r\n                                                setUserGrade(e.target.value)\r\n                                            }}></input>\r\n                                        </form>\r\n                                        \r\n                                    )\r\n                                    :(\r\n                                        <div className=\"edit-wrapper\">\r\n                                            \r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n\r\n                    \r\n                    <div className=\"myProfile\">\r\n                        <div className=\"wrapper\">\r\n                            <div className=\"title-wrapper\">\r\n                                <h3>아이디</h3>\r\n                            </div>\r\n                            <div className=\"block-for-mobile\">\r\n                                    <div className=\"contents\">{userUsername_info}</div>  \r\n                                {\r\n                                    pointModal === true\r\n                                    ?(\r\n                                        <form className=\"nickname-form\">\r\n                                            <input className=\"nickname-input\" placeholder={\"\"} onChange={(e)=>{\r\n                                                setUserName_info(e.target.value)\r\n                                            }}></input>\r\n                                        </form>\r\n                                        \r\n                                    )\r\n                                    :(\r\n                                        <div className=\"edit-wrapper\">\r\n                                            \r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n\r\n                    <div className=\"myProfile\">\r\n                        <div className=\"wrapper\">\r\n                            <div className=\"title-wrapper\">\r\n                                <h3>이메일</h3>\r\n                            </div>\r\n                            <div className=\"block-for-mobile\">\r\n                                    <div className=\"contents\">{userEmail_info}</div>  \r\n                                {\r\n                                    pointModal === true\r\n                                    ?(\r\n                                        <form className=\"nickname-form\">\r\n                                            <input className=\"nickname-input\" placeholder={\"\"} onChange={(e)=>{\r\n                                                setUserEmail_info(e.target.value)\r\n                                            }}></input>\r\n                                        </form>\r\n                                        \r\n                                    )\r\n                                    :(\r\n                                        <div className=\"edit-wrapper\">\r\n                                            \r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n\r\n                    <div className=\"myProfile\">\r\n                        <div className=\"wrapper\">\r\n                            <div className=\"title-wrapper\">\r\n                                <h3>이름</h3>\r\n                            </div>\r\n                            <div className=\"block-for-mobile\">\r\n                                    <div className=\"contents\">{userName}</div>\r\n                                {\r\n                                    pointModal === true\r\n                                    ?(\r\n                                        <form className=\"nickname-form\">\r\n                                            <input className=\"nickname-input\" placeholder={\"\"} onChange={(e)=>{\r\n                                                setUserName(e.target.value)\r\n                                            }}></input>\r\n                                        </form>\r\n                                        \r\n                                    )\r\n                                    :(\r\n                                        <div className=\"edit-wrapper\">\r\n                                            \r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n                    \r\n                    <div className=\"myProfile\">\r\n                        <div className=\"wrapper\">\r\n                            <div className=\"title-wrapper\">\r\n                                <h3>전화번호</h3>\r\n                            </div>\r\n                            <div className=\"block-for-mobile\">\r\n                                <div className=\"contents\">{userNumber}</div>\r\n                                {\r\n                                    pointModal === true\r\n                                    ?(\r\n                                        <form className=\"nickname-form\">\r\n                                            <input className=\"nickname-input\" placeholder={\"\"} onChange={(e)=>{\r\n                                                setUserNumber(e.target.value)\r\n                                            }}></input>\r\n                                        </form>\r\n                                        \r\n                                    )\r\n                                    :(\r\n                                        <div className=\"edit-wrapper\">\r\n                                            \r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                        </div>    \r\n                    </div>\r\n\r\n                    \r\n                    <div className=\"myProfile\">\r\n                        <div className=\"wrapper\">\r\n                            <div className=\"title-wrapper\">\r\n                            </div>\r\n                            <div className=\"block-for-mobile\">\r\n                                <div className=\"contents\">\r\n                                    <button className=\"out-button\" onClick={DeleteUser}>회원탈퇴</button>\r\n                                    <button className=\"save-button\" onClick={()=>{\r\n                                        handleEffect(handleSubmit)\r\n                                        setInfomodal(false)\r\n                                        setNickname(false)\r\n                                    }}>저장</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </section>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\nexport default Profile;","import React from \"react\";\r\nimport { Button } from '@material-ui/core';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(3),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Tier() {\r\n  const classes = useStyles();\r\n  return (\r\n      \r\n        <div className=\"here\">\r\n            <div className=\"here_left\">\r\n      <h1>포인트</h1>\r\n      <br />\r\n        <h3>보유 포인트 : <Button variant=\"outlined\"\r\n                                 color=\"primary\"\r\n                                 size=\"small\"\r\n                                 className={classes.margin}>\r\n         0 : 포인트\r\n        </Button>\r\n\r\n            <Button variant=\"outlined\"\r\n                    size=\"small\"\r\n                    startIcon={<MonetizationOnIcon />}\r\n                    href=\"/Pointcg\"\r\n                    >\r\n                      충전하기\r\n                  </Button></h3>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <h1>환전 신청</h1>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <TextField id=\"outlined-basic\" label=\"금액을 입력하세요\" variant=\"outlined\"\r\n                              size=\"small\" />\r\n        <br />\r\n        <TextField id=\"outlined-basic\" label=\"예금주\" variant=\"outlined\"\r\n                              size=\"small\" />\r\n        <TextField id=\"outlined-basic\" label=\"계좌번호(-제외)\" variant=\"outlined\"\r\n        size=\"small\" />\r\n        \r\n        <div className=\"check\">\r\n        <Fab \r\n          variant=\"extended\"\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          aria-label=\"add\"\r\n          className={classes.margin}\r\n        >\r\n          \r\n          <CheckIcon className={classes.extendedIcon} />\r\n          환전하기\r\n          \r\n        </Fab>\r\n        </div>\r\n      </div>\r\n      <div className=\"here_right\">\r\n     \r\n\r\n      </div>\r\n      </div>\r\n    \r\n  )\r\n}\r\nexport default Tier;","import React, { useState, useEffect } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(3),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Point() {\r\n  let [userPoint, setUserPoint] = useState()\r\n  let [userId, setUserId] = useState()\r\n\r\n  const classes = useStyles();\r\n  useEffect(()=>{\r\n    fetch('http://39.118.174.168:8000/api/current_user/', {\r\n      headers: {\r\n        Authorization: `JWT ${localStorage.getItem('token')}`\r\n      }\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      // 현재 유저 정보 받아왔다면, 로그인 상태로 state 업데이트 하고\r\n      if (json.id) {\r\n        setUserId(json.id)\r\n        //유저정보를 받아왔으면 해당 user의 프로필을 받아온다.\r\n    }fetch('http://39.118.174.168:8000/api/profile/' + json.id + '/update/',{\r\n            method : 'PATCH',\r\n            headers: {\r\n                Authorization: `JWT ${localStorage.getItem('token')}`\r\n            },\r\n        })\r\n        .then((res)=>res.json())\r\n        // 데이터베이스에서 가져오는 정확한 명\r\n        .then((userData)=> {\r\n         \r\n            setUserPoint(userData.point)\r\n            \r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n          });;\r\n    }).catch(error => {\r\n        console.log(error)\r\n      });\r\n},[userId])\r\n\r\n\r\n  return (\r\n      \r\n        <div className=\"here\">\r\n            <div className=\"here_left\">\r\n      <h1>포인트</h1>\r\n      <br />\r\n        <h3>보유 포인트 : {userPoint}P　\r\n\r\n            <Button variant=\"outlined\"\r\n                    size=\"small\"\r\n                    startIcon={<MonetizationOnIcon />}\r\n                    href=\"/pointcg\"\r\n                    >\r\n                      충전하기\r\n                  </Button></h3>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <h1>환전 신청</h1>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <TextField id=\"outlined-basic\" label=\"금액을 입력하세요\" variant=\"outlined\"\r\n                              size=\"small\" />\r\n        <br />\r\n        <TextField id=\"outlined-basic\" label=\"예금주\" variant=\"outlined\"\r\n                              size=\"small\" />\r\n        <TextField id=\"outlined-basic\" label=\"계좌번호(-제외)\" variant=\"outlined\"\r\n        size=\"small\" />\r\n        \r\n        <div className=\"check\">\r\n        <Fab \r\n          variant=\"extended\"\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          aria-label=\"add\"\r\n          className={classes.margin}\r\n        >\r\n          \r\n          <CheckIcon className={classes.extendedIcon} />\r\n          환전하기\r\n          \r\n        </Fab>\r\n        </div>\r\n      </div>\r\n      <div className=\"here_right\">\r\n     \r\n\r\n      </div>\r\n      </div>\r\n    \r\n  )\r\n}\r\nexport default Point;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport StarIcon from '@material-ui/icons/StarBorder';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  '@global': {\r\n    ul: {\r\n      margin: 0,\r\n      padding: 0,\r\n      listStyle: 'none',\r\n    },\r\n  },\r\n  appBar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  toolbar: {\r\n    flexWrap: 'wrap',\r\n  },\r\n  toolbarTitle: {\r\n    flexGrow: 1,\r\n  },\r\n  link: {\r\n    margin: theme.spacing(1, 1.5),\r\n  },\r\n  heroContent: {\r\n    padding: theme.spacing(8, 0, 6),\r\n  },\r\n  cardHeader: {\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[700],\r\n  },\r\n  cardPricing: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'baseline',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  footer: {\r\n    borderTop: `1px solid ${theme.palette.divider}`,\r\n    marginTop: theme.spacing(8),\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingTop: theme.spacing(6),\r\n      paddingBottom: theme.spacing(6),\r\n    },\r\n  },\r\n}));\r\n\r\nconst tiers = [\r\n  {\r\n    title: '프리미엄',\r\n    price: '29900',\r\n    description: ['10 users included', '2 GB of storage', 'Help center access', 'Email support'],\r\n    buttonText: '구매하기',\r\n    buttonVariant: 'outlined',\r\n  },\r\n  {\r\n    title: '슈퍼울트라 프리미엄',\r\n    subheader: 'Most popular',\r\n    price: '119900',\r\n    description: [\r\n      '20 users included',\r\n      '10 GB of storage',\r\n      'Help center access',\r\n      'Priority email support',\r\n    ],\r\n    buttonText: '구매하기',\r\n    buttonVariant: 'contained',\r\n  },\r\n  {\r\n    title: '슈퍼 프리미엄',\r\n    price: '59000',\r\n    description: [\r\n      '50 users included',\r\n      '30 GB of storage',\r\n      'Help center access',\r\n      'Phone & email support',\r\n    ],\r\n    buttonText: '구매하기',\r\n    buttonVariant: 'outlined',\r\n  },\r\n];\r\n\r\nexport default function Pointcg() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n\r\n     \r\n      <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent}>\r\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n          무제한 이용권\r\n        </Typography>\r\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n          당신이 원하는 일수만큼 마음대로 고티어 파트너와 제한없이 게임을 즐길 수 있습니다\r\n        </Typography>\r\n      </Container>\r\n      {/* End hero unit */}\r\n      <Container maxWidth=\"md\" component=\"main\">\r\n        <Grid container spacing={5} alignItems=\"flex-end\">\r\n          {tiers.map((tier) => (\r\n            // Enterprise card is full width at sm breakpoint\r\n            <Grid item key={tier.title} xs={12} sm={tier.title === 'Enterprise' ? 12 : 6} md={4}>\r\n              <Card>\r\n                <CardHeader\r\n                  title={tier.title}\r\n                  subheader={tier.subheader}\r\n                  titleTypographyProps={{ align: 'center' }}\r\n                  subheaderTypographyProps={{ align: 'center' }}\r\n                  action={tier.title === 'Pro' ? <StarIcon /> : null}\r\n                  className={classes.cardHeader}\r\n                />\r\n                <CardContent>\r\n                  <div className={classes.cardPricing}>\r\n                    <Typography component=\"h2\" variant=\"h3\" color=\"textPrimary\">\r\n                      ${tier.price}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" color=\"textSecondary\">\r\n                      /1day\r\n                    </Typography>\r\n                  </div>\r\n                  <ul>\r\n                    {tier.description.map((line) => (\r\n                      <Typography component=\"li\" variant=\"subtitle1\" align=\"center\" key={line}>\r\n                        {line}\r\n                      </Typography>\r\n                    ))}\r\n                  </ul>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button fullWidth variant={tier.buttonVariant} color=\"primary\">\r\n                    {tier.buttonText}\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n   \r\n    </React.Fragment>\r\n  );\r\n}","import React, {useState, useEffect} from 'react';\nimport { Link, Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport HomePage from \"./views/HomePage\";\nimport LoginPage from \"./views/LoginPage\";\nimport RegisterPage from \"./views/RegisterPage\";\nimport './index.css';\nimport Sidebarmenu from \"./Sidebar/Sidebarmenu\";\nimport Header from \"./views/Header\";\nimport Profile from \"./Sidebar/Profile\";\nimport Tier from \"./Sidebar/Tier\";\nimport Point from \"./Sidebar/Point\";\nimport Pointcg from \"./Sidebar/Pointcg\";\n// import { colors } from '@material-ui/core';\n\nfunction App(){\n\n  const [modal, setModal] = useState(false);\n  const [user, setUser] = useState([])\n  let [isAuthenticated, setisAuthenticated] = useState(localStorage.getItem('token') ? true : false)\n\n  const userHasAuthenticated = (authenticated, username, token) => { \n    setisAuthenticated(authenticated);\n    setUser(username);\n    localStorage.setItem('token', token);\n    // console.log(localStorage.getItem(token));\n    // window.location.reload();\n  } //회원가입이나 로그인이 성공했을 때 토큰을 저장\n\n  // if(flag === 1){\n  //   // window.location.reload();\n  //   setFlag(0);\n  //   console.log(flag);\n  // } else{\n\n  const handleLogout = () => {\n    setisAuthenticated(false);\n    setUser(\"\");\n    localStorage.removeItem('token');\n    // setModal(false)\n  }//로그아웃\n\n  useEffect(()=>{\n    if(isAuthenticated){\n      setModal(true);\n    }\n    else{\n      setModal(false);\n    }\n  },[isAuthenticated])\n\n  useEffect(() => {\n    if(isAuthenticated) {\n      //Token 값이 타당간가 /validate 요청을 통해 확인하고\n      // 상태 코드가 200이라면 /api/current 요청으로 user정보 받아옴\n      console.log(`${localStorage.getItem('token')}`);\n      fetch('http://39.118.174.168:8000/api/validate/', {\n        method: 'POST',\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`\n        }\n      })\n      .then(res => {\n        fetch('http://39.118.174.168:8000/api/current_user/', {\n          method: 'GET',\n          headers: {\n            Authorization: `JWT ${localStorage.getItem('token')}`\n          }\n        })\n        .then(res => res.json())\n        .then(json => {\n          if(json.username) {\n            setUser(json.username);\n          }\n          else{\n            //유저가 등록되지 않았다면 로그인 버튼이 나오도록\n            setModal(false)\n            setisAuthenticated(false)\n        }\n        // Refresh Token을 발급 -> 만료 시간 연장\n        fetch('http://39.118.174.168:8000/api/refresh/', {\n          method : 'POST',\n          headers: {\n            'Content-Type' : 'application/json'\n          },\n          body: JSON.stringify({\n            token: localStorage.getItem('token')\n          })\n        })\n        .then(res => res.json())\n        .then((json)=>{\n          userHasAuthenticated(true, json.user.username, json.token);\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      })\n      .catch(error => {\n        handleLogout();\n        console.log(error);\n      });\n    })\n    .catch(error => {\n      handleLogout();\n      console.log(error);\n    })\n  }\n}, [isAuthenticated])\n\n\n  return (\n    <Router>\n      <header>\n            \n            <div className=\"Title\">\n                <div className=\"Leftside\">\n                    \n                    <Link to=\"/\">\n                    <a className=\"T_title\" href=\"/\">LoLtopia</a>\n                    </Link>\n                </div>\n          \n                <div className=\"Rightside\">\n                    <div className=\"Another\">\n                        {/* <Header modal={modal} handleLogout={handleLogout}/> */}\n                    </div>   \n                    \n                </div>\n            \n            </div>\n            <div className=\"Navbar\">\n                <div className=\"LeftSide\">\n                    <div className=\"Links\">\n                        \n                        <Link to=\"Primium\">\n                        프리미엄 파트너\n                        </Link>\n                        \n                        <Link to=\"Teacher\">\n                        일반 파트너\n                        </Link>\n\n                        <Link to=\"Free\">\n                        자유 수강생\n                        </Link>\n\n                        <Link to=\"Oneplay\">\n                        일반 수강생\n                        </Link>\n                        \n                    </div>\n                </div>\n            </div>\n    \n      </header>\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n             <Header modal={modal} handleLogout={handleLogout}/>\n            <HomePage modal={modal} user={user} userHasAuthenticated={userHasAuthenticated} />\n          </Route>\n          <Route exact path=\"/login\">\n            <LoginPage \n            setModal={setModal} userHasAuthenticated={userHasAuthenticated}/>\n          </Route>\n          <Route exact path=\"/register\">\n            <RegisterPage setModal={setModal} userHasAuthenticated={userHasAuthenticated}/>\n          </Route> \n\n          <Route path=\"/Sidebarmenu\" exact component={Sidebarmenu}>\n       \n          </Route>\n         \n          <Route exact path=\"/profile\">\n          <Header modal={modal} handleLogout={handleLogout}/>\n            <Profile handleLogout={handleLogout}/>\n            </Route>  \n          <Route exact path=\"/tier\">\n          <Header modal={modal} handleLogout={handleLogout}/>\n            <Tier />\n          </Route>\n\n          <Route exact path=\"/point\">\n          <Header modal={modal} handleLogout={handleLogout}/>\n          <Point />\n          </Route>\n\n          <Route exact path=\"/pointcg\">\n          <Header modal={modal} handleLogout={handleLogout}/>\n          <Pointcg />\n          </Route>\n\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","const isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from \"./serviceWorker\";\n\n// import { Provider } from 'react-redux';\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"http://39.118.174.168:8000\";\naxios.defaults.withCredentials = true;\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}