{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\django-react\\\\frontend\\\\src\\\\views\\\\Boardwrite.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport CKEditor from 'ckeditor4-react';\n\nclass ConfigEvents extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      events: []\n    };\n    this.logEvent = this.logEvent.bind(this);\n    this.clearEvents = this.clearEvents.bind(this);\n  }\n\n  logEvent(event) {\n    event.timestamp = new Intl.DateTimeFormat('en', {\n      hour12: false,\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    }).format(new Date());\n    console.log(event.timestamp, event.name, event.data || 'No additional data was provided');\n    this.setState({\n      events: [event, ...this.state.events]\n    });\n  }\n\n  clearEvents() {\n    this.setState({\n      events: []\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"WYSIWYG editor with custom event handlers and configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Editors created with the CKEditior 4 React component are highly customizable. It is possible to overwrite every configuration setting using the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"config\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 150\n        }, this), \" property and passing an object containing the configuration to it.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Additionally, the CKEditor 4 WYSIWYG editor component for React allows you to bind any event handler using properties with names starting with \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"on\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 149\n        }, this), \", followed by the name of the event with the first letter capitalized. The following example shows how to bind several common CKEditor 4 events.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CKEditor, {\n        data: \"This is a CKEditor 4 WYSIWYG editor instance created by \\uFE0F\\u269B\\uFE0F React.\",\n        config: {\n          toolbar: [['Source'], ['Styles', 'Format', 'Font', 'FontSize'], ['Bold', 'Italic'], ['Undo', 'Redo'], ['About']]\n        },\n        onFocus: this.logEvent,\n        onBlur: this.logEvent,\n        onChange: this.logEvent,\n        onSelectionChange: this.logEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Events Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"To check additional details about every event, consult the console in the browser developer tools.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(EventLog, {\n        stream: this.state.events\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.clearEvents,\n        children: \"Clear events log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst EventLog = ({\n  stream\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-log\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"event-log__events\",\n      children: stream.map(event => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"event-log__event\",\n          children: /*#__PURE__*/_jsxDEV(Event, {\n            data: event\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 8\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 3\n  }, this);\n};\n\n_c = EventLog;\n\nconst Event = ({\n  data: {\n    name,\n    timestamp\n  }\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [timestamp, \" \\u2013 \", name]\n  }, void 0, true);\n};\n\n_c2 = Event;\nReactDOM.render( /*#__PURE__*/_jsxDEV(ConfigEvents, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 97,\n  columnNumber: 18\n}, this), document.getElementById('app'));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EventLog\");\n$RefreshReg$(_c2, \"Event\");","map":{"version":3,"sources":["C:/django-react/frontend/src/views/Boardwrite.js"],"names":["React","Component","ReactDOM","CKEditor","ConfigEvents","constructor","props","state","events","logEvent","bind","clearEvents","event","timestamp","Intl","DateTimeFormat","hour12","hour","minute","second","format","Date","console","log","name","data","setState","render","toolbar","EventLog","stream","map","Event","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACpCI,EAAAA,WAAW,CAAEC,KAAF,EAAU;AACpB,UAAOA,KAAP;AAEA,SAAKC,KAAL,GAAa;AACZC,MAAAA,MAAM,EAAE;AADI,KAAb;AAIA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAoB,IAApB,CAAhB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAuB,IAAvB,CAAnB;AACA;;AAEDD,EAAAA,QAAQ,CAAEG,KAAF,EAAU;AACjBA,IAAAA,KAAK,CAACC,SAAN,GAAkB,IAAIC,IAAI,CAACC,cAAT,CAAyB,IAAzB,EAA+B;AAChDC,MAAAA,MAAM,EAAE,KADwC;AAEhDC,MAAAA,IAAI,EAAE,SAF0C;AAGhDC,MAAAA,MAAM,EAAE,SAHwC;AAIhDC,MAAAA,MAAM,EAAE;AAJwC,KAA/B,EAKdC,MALc,CAKN,IAAIC,IAAJ,EALM,CAAlB;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAaX,KAAK,CAACC,SAAnB,EAA8BD,KAAK,CAACY,IAApC,EAA0CZ,KAAK,CAACa,IAAN,IAAc,iCAAxD;AAEA,SAAKC,QAAL,CAAe;AACdlB,MAAAA,MAAM,EAAE,CAAEI,KAAF,EAAS,GAAG,KAAKL,KAAL,CAAWC,MAAvB;AADM,KAAf;AAGA;;AAEDG,EAAAA,WAAW,GAAG;AACb,SAAKe,QAAL,CAAe;AACdlB,MAAAA,MAAM,EAAE;AADM,KAAf;AAGA;;AAEDmB,EAAAA,MAAM,GAAG;AACR,wBACC;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA,oLACiJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADjJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eAKC;AAAA,mLACgJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADhJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALD,eAQC,QAAC,QAAD;AACC,QAAA,IAAI,EAAC,mFADN;AAEC,QAAA,MAAM,EAAE;AACPC,UAAAA,OAAO,EAAE,CACR,CAAE,QAAF,CADQ,EAER,CAAE,QAAF,EAAY,QAAZ,EAAsB,MAAtB,EAA8B,UAA9B,CAFQ,EAGR,CAAE,MAAF,EAAU,QAAV,CAHQ,EAIR,CAAE,MAAF,EAAU,MAAV,CAJQ,EAKR,CAAE,OAAF,CALQ;AADF,SAFT;AAYC,QAAA,OAAO,EAAE,KAAKnB,QAZf;AAaC,QAAA,MAAM,EAAE,KAAKA,QAbd;AAcC,QAAA,QAAQ,EAAE,KAAKA,QAdhB;AAeC,QAAA,iBAAiB,EAAE,KAAKA;AAfzB;AAAA;AAAA;AAAA;AAAA,cARD,eAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF,eAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF,eA0BE,QAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC;AAA7B;AAAA;AAAA;AAAA;AAAA,cA1BF,eA2BE;AAAQ,QAAA,OAAO,EAAE,KAAKG,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AA+BA;;AAjEmC;;AAmErC,MAAMkB,QAAQ,GAAG,CAAE;AAAEC,EAAAA;AAAF,CAAF,KAAkB;AAClC,sBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACC;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA,gBAEEA,MAAM,CAACC,GAAP,CAAYnB,KAAK,IAAI;AACpB,4BACC;AAAI,UAAA,SAAS,EAAC,kBAAd;AAAA,iCACC,QAAC,KAAD;AAAO,YAAA,IAAI,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD;AAKA,OAND;AAFF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAeA,CAhBD;;KAAMiB,Q;;AAiBN,MAAMG,KAAK,GAAG,CAAE;AAAEP,EAAAA,IAAI,EAAE;AAAED,IAAAA,IAAF;AAAQX,IAAAA;AAAR;AAAR,CAAF,KAAqC;AAClD,sBACC;AAAA,eACEA,SADF,cACgBW,IADhB;AAAA,kBADD;AAKA,CAND;;MAAMQ,K;AAQN9B,QAAQ,CAACyB,MAAT,eAAiB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,QAAjB,EAAmCM,QAAQ,CAACC,cAAT,CAAyB,KAAzB,CAAnC","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CKEditor from 'ckeditor4-react';\r\n\r\nclass ConfigEvents extends Component {\r\n\tconstructor( props ) {\r\n\t\tsuper( props );\r\n\r\n\t\tthis.state = {\r\n\t\t\tevents: []\r\n\t\t};\r\n\r\n\t\tthis.logEvent = this.logEvent.bind( this );\r\n\t\tthis.clearEvents = this.clearEvents.bind( this );\r\n\t}\r\n\r\n\tlogEvent( event ) {\r\n\t\tevent.timestamp = new Intl.DateTimeFormat( 'en', {\r\n\t\t\thour12: false,\r\n\t\t\thour: '2-digit',\r\n\t\t\tminute: '2-digit',\r\n\t\t\tsecond: '2-digit'\r\n\t\t} ).format( new Date() );\r\n\r\n\t\tconsole.log( event.timestamp, event.name, event.data || 'No additional data was provided' );\r\n\r\n\t\tthis.setState( {\r\n\t\t\tevents: [ event, ...this.state.events ]\r\n\t\t} );\r\n\t}\r\n\r\n\tclearEvents() {\r\n\t\tthis.setState( {\r\n\t\t\tevents: []\r\n\t\t} );\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>WYSIWYG editor with custom event handlers and configuration</h2>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tEditors created with the CKEditior 4 React component are highly customizable. It is possible to overwrite every configuration setting using the <code>config</code> property and passing an object containing the configuration to it.\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tAdditionally, the CKEditor 4 WYSIWYG editor component for React allows you to bind any event handler using properties with names starting with <code>on</code>, followed by the name of the event with the first letter capitalized. The following example shows how to bind several common CKEditor 4 events.\r\n\t\t\t\t</p>\r\n\t\t\t\t<CKEditor\r\n\t\t\t\t\tdata=\"This is a CKEditor 4 WYSIWYG editor instance created by ️⚛️ React.\"\r\n\t\t\t\t\tconfig={{\r\n\t\t\t\t\t\ttoolbar: [\r\n\t\t\t\t\t\t\t[ 'Source' ],\r\n\t\t\t\t\t\t\t[ 'Styles', 'Format', 'Font', 'FontSize' ],\r\n\t\t\t\t\t\t\t[ 'Bold', 'Italic' ],\r\n\t\t\t\t\t\t\t[ 'Undo', 'Redo' ],\r\n\t\t\t\t\t\t\t[ 'About' ]\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}}\r\n\r\n\t\t\t\t\tonFocus={this.logEvent}\r\n\t\t\t\t\tonBlur={this.logEvent}\r\n\t\t\t\t\tonChange={this.logEvent}\r\n\t\t\t\t\tonSelectionChange={this.logEvent} />\r\n\t\t\t\t\t<h3>Events Log</h3>\r\n\t\t\t\t\t<small>To check additional details about every event, consult the console in the browser developer tools.</small>\r\n\t\t\t\t\t<EventLog stream={this.state.events} />\r\n\t\t\t\t\t<button onClick={this.clearEvents}>Clear events log</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nconst EventLog = ( { stream } ) => {\r\n\treturn (\r\n\t\t<div className=\"event-log\">\r\n\t\t\t<ul className=\"event-log__events\">\r\n\t\t\t\t{\r\n\t\t\t\t\tstream.map( event => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li className=\"event-log__event\">\r\n\t\t\t\t\t\t\t\t<Event data={event} />\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t} )\r\n\t\t\t\t}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n}\r\nconst Event = ( { data: { name, timestamp } } ) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{timestamp} – {name}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nReactDOM.render( <ConfigEvents />, document.getElementById( 'app' ) );"]},"metadata":{},"sourceType":"module"}