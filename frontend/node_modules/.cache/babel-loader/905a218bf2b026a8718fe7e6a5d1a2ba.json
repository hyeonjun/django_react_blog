{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\django-react\\\\frontend\\\\src\\\\views\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\"; // import { useDispatch } from \"react-redux\";\n// import { loginUser } from \"../_action/userAction\";\n// import axios from \"axios\";\n\nfunction LoginPage(props) {\n  _s();\n\n  // const dispatch = useDispatch();\n  const [username, setUserName] = useState(\"\");\n  const [Password, setPassword] = useState(\"\");\n  const [logged_in, setLogged] = useState(localStorage.getItem('token') ? true : false);\n\n  const onUserNameHandler = e => {\n    setUserName(e.currentTarget.value);\n  };\n\n  const onPasswordHanlder = e => {\n    setPassword(e.currentTarget.value);\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault(); //로그인을 진행하기위해서\n    //첫번째 useDispatch(액션) 을 활용해서 액션을 dispatch해준다\n\n    const data = {\n      username: username,\n      password: Password\n    };\n    dispatch(loginUser(body)).then(res => {\n      if (res.payload.loginSuccess) {\n        props.history.push(\"/\");\n      } else {\n        alert(res.payload.message);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n    fetch('http://39.118.174.168:8000/api/users/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.json()).then(json => {\n      localStorage.setItem('token', json.token);\n      setLogged(true);\n    });\n\n    if (logged_in === true) {\n      props.history.push(\"/\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      method: \"POST\",\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"username\",\n        value: username,\n        onChange: onUserNameHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: Password,\n        onChange: onPasswordHanlder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginPage, \"v1TaWTO/pmMVEFPW6GtmygYgVkk=\");\n\n_c = LoginPage;\nexport default _c2 = withRouter(LoginPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/django-react/frontend/src/views/LoginPage.js"],"names":["React","useState","withRouter","LoginPage","props","username","setUserName","Password","setPassword","logged_in","setLogged","localStorage","getItem","onUserNameHandler","e","currentTarget","value","onPasswordHanlder","onSubmitHandler","preventDefault","data","password","dispatch","loginUser","body","then","res","payload","loginSuccess","history","push","alert","message","catch","err","console","log","fetch","method","headers","JSON","stringify","json","setItem","token","display","justifyContent","alignItems","width","height","flexDirection"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;AACA;AACA;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,SAAD,EAAYC,SAAZ,IAA0BT,QAAQ,CAACU,YAAY,CAACC,OAAb,CAAqB,OAArB,IAAgC,IAAhC,GAAuC,KAAxC,CAAxC;;AAEA,QAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC/BR,IAAAA,WAAW,CAACQ,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAX;AACD,GAFD;;AAGA,QAAMC,iBAAiB,GAAIH,CAAD,IAAO;AAC/BN,IAAAA,WAAW,CAACM,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAX;AACD,GAFD;;AAIA,QAAME,eAAe,GAAIJ,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACK,cAAF,GAD6B,CAE7B;AACA;;AACA,UAAMC,IAAI,GAAG;AACXf,MAAAA,QAAQ,EAAEA,QADC;AAEXgB,MAAAA,QAAQ,EAAEd;AAFC,KAAb;AAIAe,IAAAA,QAAQ,CAACC,SAAS,CAACC,IAAD,CAAV,CAAR,CAA0BC,IAA1B,CAAgCC,GAAD,IAAS;AACpC,UAAIA,GAAG,CAACC,OAAJ,CAAYC,YAAhB,EAA8B;AAC5BxB,QAAAA,KAAK,CAACyB,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD,OAFD,MAEO;AACLC,QAAAA,KAAK,CAACL,GAAG,CAACC,OAAJ,CAAYK,OAAb,CAAL;AACD;AACF,KANH,EAOGC,KAPH,CAOUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KATH;AAWAG,IAAAA,KAAK,CAAC,uCAAD,EAA0C;AAC7CC,MAAAA,MAAM,EAAE,MADqC;AAE7CC,MAAAA,OAAO,EAAE;AACP,wBAAe;AADR,OAFoC;AAK7Cf,MAAAA,IAAI,EAAEgB,IAAI,CAACC,SAAL,CAAerB,IAAf;AALuC,KAA1C,CAAL,CAOCK,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACgB,IAAJ,EAPb,EAQCjB,IARD,CAQMiB,IAAI,IAAI;AACZ/B,MAAAA,YAAY,CAACgC,OAAb,CAAqB,OAArB,EAA8BD,IAAI,CAACE,KAAnC;AACAlC,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAXD;;AAYA,QAAID,SAAS,KAAK,IAAlB,EAAwB;AACtBL,MAAAA,KAAK,CAACyB,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD;AACF,GAlCD;;AAsCA,sBACE;AACE,IAAA,KAAK,EAAE;AACLe,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,cAAc,EAAE,QAFX;AAGLC,MAAAA,UAAU,EAAE,QAHP;AAILC,MAAAA,KAAK,EAAE,MAJF;AAKLC,MAAAA,MAAM,EAAE;AALH,KADT;AAAA,2BAQE;AACE,MAAA,QAAQ,EAAE/B,eADZ;AAC6B,MAAA,MAAM,EAAC,MADpC;AAEE,MAAA,KAAK,EAAE;AAAE2B,QAAAA,OAAO,EAAE,MAAX;AAAmBK,QAAAA,aAAa,EAAE;AAAlC,OAFT;AAAA,8BAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,KAAK,EAAE7C,QAA9B;AAAwC,QAAA,QAAQ,EAAEQ;AAAlD;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,KAAK,EAAEN,QAA9B;AAAwC,QAAA,QAAQ,EAAEU;AAAlD;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAxEQd,S;;KAAAA,S;AA0ET,qBAAeD,UAAU,CAACC,SAAD,CAAzB","sourcesContent":["import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { loginUser } from \"../_action/userAction\";\r\n// import axios from \"axios\";\r\nfunction LoginPage(props) {\r\n  // const dispatch = useDispatch();\r\n  const [username, setUserName] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n  const [logged_in, setLogged ] = useState(localStorage.getItem('token') ? true : false);\r\n\r\n  const onUserNameHandler = (e) => {\r\n    setUserName(e.currentTarget.value);\r\n  };\r\n  const onPasswordHanlder = (e) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    //로그인을 진행하기위해서\r\n    //첫번째 useDispatch(액션) 을 활용해서 액션을 dispatch해준다\r\n    const data = {\r\n      username: username,\r\n      password: Password,\r\n    };\r\n    dispatch(loginUser(body)).then((res) => {\r\n        if (res.payload.loginSuccess) {\r\n          props.history.push(\"/\");\r\n        } else {\r\n          alert(res.payload.message);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    fetch('http://39.118.174.168:8000/api/users/', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type':'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      localStorage.setItem('token', json.token);\r\n      setLogged(true);\r\n    });\r\n    if (logged_in === true) {\r\n      props.history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n      }}>\r\n      <form\r\n        onSubmit={onSubmitHandler} method=\"POST\"\r\n        style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n        <label>ID</label>\r\n        <input type=\"username\" value={username} onChange={onUserNameHandler} />\r\n        <label>Password</label>\r\n        <input type=\"password\" value={Password} onChange={onPasswordHanlder} />\r\n        <br />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);"]},"metadata":{},"sourceType":"module"}