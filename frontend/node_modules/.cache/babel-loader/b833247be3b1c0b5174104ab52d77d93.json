{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\django-react\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport HomePage from \"./views/HomePage\";\nimport LoginPage from \"./views/LoginPage\";\nimport RegisterPage from \"./views/RegisterPage\";\nimport axios from \"axios\";\n\nfunction App() {\n  _s();\n\n  const [modal, setModal] = useState(false);\n  const [user, setUser] = useState([]);\n  let [isAuthenticated, setisAuthenticated] = useState(localStorage.getItem('token') ? true : false);\n\n  const userHasAuthenticated = (authenticated, username, token) => {\n    setisAuthenticated(authenticated);\n    setUser(username);\n    localStorage.setItem('token', token);\n  }; //회원가입이나 로그인이 성공했을 때 토큰을 저장\n\n\n  const handleLogout = () => {\n    setisAuthenticated(false);\n    setUser(\"\");\n    localStorage.removeItem('token'); // setModal(false)\n  }; //로그아웃\n  // useEffect(()=>{\n  //   if(isAuthenticated){\n  //     setModal(true)\n  //   }\n  //   else{\n  //     setModal(false)\n  //   }\n  // },[isAuthenticated])\n\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      //Token 값이 타당간가 /validate 요청을 통해 확인하고\n      // 상태 코드가 200이라면 /api/current 요청으로 user정보 받아옴\n      axios('http://39.118.174.168:8000/api/validate/', {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`\n        }\n      }).then(res => {\n        axios('http://localhost:8000/api/current/', {\n          headers: {\n            Authorization: `JWT ${localStorage.getItem('token')}`\n          }\n        }).then(res => res.json()).then(json => {\n          if (json.username) {\n            setUser(json.username);\n          } else {\n            //유저가 등록되지 않았다면 로그인 버튼이 나오도록\n            setModal(false);\n            setisAuthenticated(false);\n          } // Refresh Token을 발급 -> 만료 시간 연장\n\n\n          fetch('http://localhost:8000/api/refresh/');\n        });\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: HomePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          component: LoginPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/register\",\n          component: RegisterPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gJfukJ/oZEz+NTP4cioZ7JF/ZQE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/django-react/frontend/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","HomePage","LoginPage","RegisterPage","axios","App","modal","setModal","user","setUser","isAuthenticated","setisAuthenticated","localStorage","getItem","userHasAuthenticated","authenticated","username","token","setItem","handleLogout","removeItem","headers","Authorization","then","res","json","fetch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,SAASC,GAAT,GAAc;AAAA;;AACZ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AAEA,MAAI,CAACe,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CAACiB,YAAY,CAACC,OAAb,CAAqB,OAArB,IAAgC,IAAhC,GAAuC,KAAxC,CAApD;;AAEA,QAAMC,oBAAoB,GAAG,CAACC,aAAD,EAAgBC,QAAhB,EAA0BC,KAA1B,KAAoC;AAC/DN,IAAAA,kBAAkB,CAACI,aAAD,CAAlB;AACAN,IAAAA,OAAO,CAACO,QAAD,CAAP;AACAJ,IAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BD,KAA9B;AACD,GAJD,CANY,CAUX;;;AAED,QAAME,YAAY,GAAG,MAAM;AACzBR,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAF,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAG,IAAAA,YAAY,CAACQ,UAAb,CAAwB,OAAxB,EAHyB,CAIzB;AACD,GALD,CAZY,CAiBX;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGc,eAAH,EAAoB;AAClB;AACA;AACAN,MAAAA,KAAK,CAAC,0CAAD,EAA6C;AAChDiB,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,OAAMV,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAD7C;AADuC,OAA7C,CAAL,CAKCU,IALD,CAKMC,GAAG,IAAI;AACXpB,QAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CiB,UAAAA,OAAO,EAAE;AACPC,YAAAA,aAAa,EAAG,OAAMV,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAD7C;AADiC,SAAvC,CAAL,CAKCU,IALD,CAKMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALb,EAMCF,IAND,CAMME,IAAI,IAAI;AACZ,cAAGA,IAAI,CAACT,QAAR,EAAkB;AAChBP,YAAAA,OAAO,CAACgB,IAAI,CAACT,QAAN,CAAP;AACD,WAFD,MAGI;AACF;AACAT,YAAAA,QAAQ,CAAC,KAAD,CAAR;AACAI,YAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACH,WARa,CASd;;;AACAe,UAAAA,KAAK,CAAC,oCAAD,CAAL;AACC,SAjBD;AAkBD,OAxBD;AAyBD;AACF,GA9BQ,CAAT;AAiCA,sBACE,QAAC,MAAD;AAAA,2BACE;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAEzB;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,QAAlB;AAA2B,UAAA,SAAS,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,WAAlB;AAA8B,UAAA,SAAS,EAAEC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAxEQE,G;;KAAAA,G;AA0ET,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport HomePage from \"./views/HomePage\";\nimport LoginPage from \"./views/LoginPage\";\nimport RegisterPage from \"./views/RegisterPage\";\nimport axios from \"axios\"\nfunction App(){\n  const [modal, setModal] = useState(false);\n  const [user, setUser] = useState([])\n\n  let [isAuthenticated, setisAuthenticated] = useState(localStorage.getItem('token') ? true : false)\n\n  const userHasAuthenticated = (authenticated, username, token) => { \n    setisAuthenticated(authenticated)\n    setUser(username)\n    localStorage.setItem('token', token);\n  }//회원가입이나 로그인이 성공했을 때 토큰을 저장\n\n  const handleLogout = () => {\n    setisAuthenticated(false)\n    setUser(\"\")\n    localStorage.removeItem('token');\n    // setModal(false)\n  }//로그아웃\n\n  // useEffect(()=>{\n  //   if(isAuthenticated){\n  //     setModal(true)\n  //   }\n  //   else{\n  //     setModal(false)\n  //   }\n  // },[isAuthenticated])\n\n  useEffect(() => {\n    if(isAuthenticated) {\n      //Token 값이 타당간가 /validate 요청을 통해 확인하고\n      // 상태 코드가 200이라면 /api/current 요청으로 user정보 받아옴\n      axios('http://39.118.174.168:8000/api/validate/', {\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`\n        }\n      })\n      .then(res => {\n        axios('http://localhost:8000/api/current/', {\n          headers: {\n            Authorization: `JWT ${localStorage.getItem('token')}`\n          }\n        })\n        .then(res => res.json())\n        .then(json => {\n          if(json.username) {\n            setUser(json.username);\n          }\n          else{\n            //유저가 등록되지 않았다면 로그인 버튼이 나오도록\n            setModal(false)\n            setisAuthenticated(false)\n        }\n        // Refresh Token을 발급 -> 만료 시간 연장\n        fetch('http://localhost:8000/api/refresh/')\n        })\n      })\n    }\n  })\n\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/login\" component={LoginPage} />\n          <Route exact path=\"/register\" component={RegisterPage} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}