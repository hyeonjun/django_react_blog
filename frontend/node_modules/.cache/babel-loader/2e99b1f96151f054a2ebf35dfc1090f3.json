{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\django-react\\\\frontend\\\\src\\\\views\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\"; // import { useDispatch } from \"react-redux\";\n// import { loginUser } from \"../_action/userAction\";\n\nimport axios from \"axios\";\n\nfunction LoginPage(props) {\n  _s();\n\n  // const dispatch = useDispatch();\n  const [username, setUserName] = useState(\"\");\n  const [Password, setPassword] = useState(\"\");\n\n  const onUserNameHandler = e => {\n    setUserName(e.currentTarget.value);\n  };\n\n  const onPasswordHanlder = e => {\n    setPassword(e.currentTarget.value);\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault(); //로그인을 진행하기위해서\n    //첫번째 useDispatch(액션) 을 활용해서 액션을 dispatch해준다\n\n    const body = {\n      username: username,\n      password: Password\n    }; // dispatch(loginUser(body)).then((res) => {\n    //     if (res.payload.loginSuccess) {\n    //       props.history.push(\"/\");\n    //     } else {\n    //       alert(res.payload.message);\n    //     }\n    //   })\n    //   .catch((err) => {\n    //     console.log(err);\n    //   });\n\n    axios.post('http://39.118.174.168:8000/api/login/', body).then(response => {\n      const {\n        accessToken\n      } = response.body; //API 요청하는 콜마다 헤더에 accessToken 담아 보내도록 설정\n\n      console.log(accessToken);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`; //accessToken을 localStorage, cookie등에 저장 x\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmitHandler,\n      method: \"POST\",\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"username\",\n        value: username,\n        onChange: onUserNameHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: Password,\n        onChange: onPasswordHanlder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginPage, \"+hUJD0Ns0eH1McKeTy5pDwfauAk=\");\n\n_c = LoginPage;\nexport default _c2 = withRouter(LoginPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/django-react/frontend/src/views/LoginPage.js"],"names":["React","useState","withRouter","axios","LoginPage","props","username","setUserName","Password","setPassword","onUserNameHandler","e","currentTarget","value","onPasswordHanlder","onSubmitHandler","preventDefault","body","password","post","then","response","accessToken","console","log","defaults","headers","common","catch","error","display","justifyContent","alignItems","width","height","flexDirection"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;AACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMS,iBAAiB,GAAIC,CAAD,IAAO;AAC/BJ,IAAAA,WAAW,CAACI,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAX;AACD,GAFD;;AAGA,QAAMC,iBAAiB,GAAIH,CAAD,IAAO;AAC/BF,IAAAA,WAAW,CAACE,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAX;AACD,GAFD;;AAIA,QAAME,eAAe,GAAIJ,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACK,cAAF,GAD6B,CAE7B;AACA;;AACA,UAAMC,IAAI,GAAG;AACXX,MAAAA,QAAQ,EAAEA,QADC;AAEXY,MAAAA,QAAQ,EAAEV;AAFC,KAAb,CAJ6B,CAQ7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAL,IAAAA,KAAK,CAACgB,IAAN,CAAW,uCAAX,EAAoDF,IAApD,EAA0DG,IAA1D,CAA+DC,QAAQ,IAAI;AACzE,YAAM;AAAEC,QAAAA;AAAF,UAAkBD,QAAQ,CAACJ,IAAjC,CADyE,CAEzE;;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACAnB,MAAAA,KAAK,CAACsB,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,UAASL,WAAY,EAAvE,CAJyE,CAKzE;AACD,KAND,EAMGM,KANH,CAMSC,KAAK,IAAI;AAChBN,MAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACD,KARD;AASD,GA3BD;;AA6BA,sBACE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,MADJ;AAELC,MAAAA,cAAc,EAAE,QAFX;AAGLC,MAAAA,UAAU,EAAE,QAHP;AAILC,MAAAA,KAAK,EAAE,MAJF;AAKLC,MAAAA,MAAM,EAAE;AALH,KADT;AAAA,2BAQE;AACE,MAAA,QAAQ,EAAEnB,eADZ;AAC6B,MAAA,MAAM,EAAC,MADpC;AAEE,MAAA,KAAK,EAAE;AAAEe,QAAAA,OAAO,EAAE,MAAX;AAAmBK,QAAAA,aAAa,EAAE;AAAlC,OAFT;AAAA,8BAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,KAAK,EAAE7B,QAA9B;AAAwC,QAAA,QAAQ,EAAEI;AAAlD;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,KAAK,EAAEF,QAA9B;AAAwC,QAAA,QAAQ,EAAEM;AAAlD;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA9DQV,S;;KAAAA,S;AAgET,qBAAeF,UAAU,CAACE,SAAD,CAAzB","sourcesContent":["import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { loginUser } from \"../_action/userAction\";\r\nimport axios from \"axios\";\r\nfunction LoginPage(props) {\r\n  // const dispatch = useDispatch();\r\n  const [username, setUserName] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n  \r\n  const onUserNameHandler = (e) => {\r\n    setUserName(e.currentTarget.value);\r\n  };\r\n  const onPasswordHanlder = (e) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n\r\n  const onSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    //로그인을 진행하기위해서\r\n    //첫번째 useDispatch(액션) 을 활용해서 액션을 dispatch해준다\r\n    const body = {\r\n      username: username,\r\n      password: Password,\r\n    };\r\n    // dispatch(loginUser(body)).then((res) => {\r\n    //     if (res.payload.loginSuccess) {\r\n    //       props.history.push(\"/\");\r\n    //     } else {\r\n    //       alert(res.payload.message);\r\n    //     }\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     console.log(err);\r\n    //   });\r\n    axios.post('http://39.118.174.168:8000/api/login/', body).then(response => {\r\n      const { accessToken } = response.body;\r\n      //API 요청하는 콜마다 헤더에 accessToken 담아 보내도록 설정\r\n      console.log(accessToken);\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\r\n      //accessToken을 localStorage, cookie등에 저장 x\r\n    }).catch(error => {\r\n      console.log(error);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n      }}>\r\n      <form\r\n        onSubmit={onSubmitHandler} method=\"POST\"\r\n        style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n        <label>ID</label>\r\n        <input type=\"username\" value={username} onChange={onUserNameHandler} />\r\n        <label>Password</label>\r\n        <input type=\"password\" value={Password} onChange={onPasswordHanlder} />\r\n        <br />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);"]},"metadata":{},"sourceType":"module"}