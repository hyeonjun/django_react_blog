{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\django-react\\\\frontend\\\\src\\\\views\\\\Boardwrite.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport CKEditor from 'ckeditor4-react';\nimport { Form } from \"react-bootstrap\";\nimport '../views/Boardwrite.css';\nconst titleStyle = {\n  marginBottom: 9\n};\n\nfunction Boardwrite() {\n  _s();\n\n  let [filterList] = useState([{\n    id: 1,\n    language: 'Python'\n  }, {\n    id: 2,\n    language: 'React'\n  }, {\n    id: 3,\n    language: 'Java'\n  }, {\n    id: 4,\n    language: 'C#'\n  }, {\n    id: 5,\n    language: 'C'\n  }, {\n    id: 6,\n    language: 'C++'\n  }, {\n    id: 7,\n    language: 'GO'\n  }, {\n    id: 8,\n    language: 'Javascript'\n  }]);\n  let [languagefilterList, setLanguageFilterList] = useState(\"\");\n  let Today = new Date();\n  let date = Today.getFullYear() + \"-\" + Today.getMonth() + \"-\" + Today.getDate();\n  const history = useHistory();\n  let [goback, setGoback] = useState(false);\n  let [imgGoback, setImgGoback] = useState(false);\n  let [img, setImg] = useState();\n  let [imgURL, setImgURL] = useState();\n  let [title, setTitle] = useState();\n  let [content, setContent] = useState(\"\");\n  let [userPhoto, setUserPhoto] = useState();\n  let [user_pk, setUser_pk] = useState();\n  let sendData;\n\n  const handleEffect = handleSubmit => {\n    if (languagefilterList === \"\" || languagefilterList.length === 0) {\n      alert(\"한 개 이상의 언어를 선택해주세요.\");\n      return;\n    }\n\n    sendData = {\n      image: imgURL,\n      title: title,\n      content: content,\n      date: date,\n      like: 0,\n      username: props.user,\n      language: languagefilterList,\n      profileImage: userPhoto,\n      user_pk: user_pk\n    };\n    handleSubmit();\n  };\n\n  let [ImgCount, setImgCount] = useState(0);\n  const refImgFiles = useRef(null);\n  useEffect(() => {\n    if (img !== undefined) {\n      setImgCount(1);\n    }\n  }, [img]);\n\n  const handleSubmit = () => {\n    let form_data = new FormData();\n\n    if (ImgCount === 1) {\n      form_data.append('image', refImgFiles.current.files[0]);\n    }\n\n    form_data.append('title', sendData.title);\n    form_data.append('content', sendData.content);\n    form_data.append('date', sendData.date);\n    form_data.append('language', sendData.language);\n    form_data.append('like', sendData.like);\n    form_data.append('username', sendData.username);\n    form_data.append('profileImage', sendData.profileImage);\n    form_data.append('user_pk', sendData.user_pk);\n    fetch(\"http://localhost:8000/api/Todos/\", {\n      method: 'POST',\n      headers: {\n        Authorization: `JWT ${localStorage.getItem('token')}`\n      },\n      body: form_data\n    }).then(res => res.json()).catch(error => console.error('Error:', error)).then(response => console.log('Success:', JSON.stringify(response))).then(history.push('/')).then(history.go(0));\n  };\n\n  useEffect(() => {\n    fetch('http://localhost:8000/user/current/', {\n      headers: {\n        Authorization: `JWT ${localStorage.getItem('token')}`\n      }\n    }).then(res => res.json()).then(json => {\n      if (json.id === null || json.id === undefined) {\n        alert(\"로그인이 필요합니다.\");\n        history.push('/');\n      }\n\n      fetch('http://localhost:8000/user/auth/profile/' + json.id + '/update/', {\n        method: 'PATCH',\n        headers: {\n          Authorization: `JWT ${localStorage.getItem('token')}`\n        }\n      }).then(res => res.json()).then(userData => {\n        setUserPhoto(userData.photo);\n        setUser_pk(userData.user_pk);\n      }).catch(error => {\n        console.log(error);\n      });\n      ;\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [userPhoto]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uAE00\\uC4F0\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"text\",\n      style: titleStyle,\n      placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(CKEditor, {\n      data: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }, this), \",\", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upButton\",\n      onClick: () => {\n        handleEffect(handleSubmit);\n        setGoback(false);\n      },\n      children: \"\\uCD9C\\uAC04\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Boardwrite, \"w6+tyYYy2cPm3Dl4A76yWq6F8E8=\", true);\n\n_c = Boardwrite;\nexport default Boardwrite;\n\nvar _c;\n\n$RefreshReg$(_c, \"Boardwrite\");","map":{"version":3,"sources":["C:/django-react/frontend/src/views/Boardwrite.js"],"names":["React","CKEditor","Form","titleStyle","marginBottom","Boardwrite","filterList","useState","id","language","languagefilterList","setLanguageFilterList","Today","Date","date","getFullYear","getMonth","getDate","history","useHistory","goback","setGoback","imgGoback","setImgGoback","img","setImg","imgURL","setImgURL","title","setTitle","content","setContent","userPhoto","setUserPhoto","user_pk","setUser_pk","sendData","handleEffect","handleSubmit","length","alert","image","like","username","props","user","profileImage","ImgCount","setImgCount","refImgFiles","useRef","useEffect","undefined","form_data","FormData","append","current","files","fetch","method","headers","Authorization","localStorage","getItem","body","then","res","json","catch","error","console","response","log","JSON","stringify","push","go","userData","photo"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport CKEditor from 'ckeditor4-react';\r\nimport {Form} from \"react-bootstrap\";\r\nimport '../views/Boardwrite.css';\r\n\r\n\r\n\r\n\r\n  const titleStyle = {\r\n     marginBottom: 9\r\n   };\r\n\r\n   \r\nfunction Boardwrite() {\r\n\r\n\r\n  let [filterList] = useState([{id : 1, language: 'Python'}, {id : 2, language : 'React'},\r\n    {id : 3, language : 'Java'}, {id : 4, language :'C#'}, {id : 5, language:'C'},\r\n    {id : 6, language:'C++'}, {id : 7, language:'GO'}, {id : 8, language:'Javascript'}])\r\n    let [languagefilterList, setLanguageFilterList] = useState(\"\")\r\n    \r\n    let Today = new Date();\r\n    let date = Today.getFullYear() + \"-\" + Today.getMonth() + \"-\" + Today.getDate()\r\n    \r\n\r\n    const history = useHistory()\r\n    let [goback, setGoback] = useState(false)\r\n    let [imgGoback, setImgGoback] = useState(false)\r\n\r\n    let [img , setImg] = useState()\r\n    let [imgURL, setImgURL] = useState()\r\n    let [title , setTitle] = useState()\r\n    let [content , setContent] = useState(\"\")\r\n    let [userPhoto, setUserPhoto] = useState()\r\n    let [user_pk, setUser_pk] = useState()\r\n\r\n    let sendData;\r\n    const handleEffect = (handleSubmit) => {\r\n        if(languagefilterList === \"\" || languagefilterList.length === 0){\r\n            alert(\"한 개 이상의 언어를 선택해주세요.\")\r\n            return;\r\n        }\r\n        sendData = {\r\n            image : imgURL,\r\n            title : title,\r\n            content : content,\r\n            date : date,\r\n            like : 0,\r\n            username : props.user,\r\n            language : languagefilterList,\r\n            profileImage : userPhoto,\r\n            user_pk : user_pk\r\n        }\r\n        handleSubmit()\r\n    }\r\n\r\n    let [ImgCount, setImgCount] = useState(0);\r\n    const refImgFiles = useRef(null);\r\n\r\n    useEffect(()=>{\r\n        if(img !== undefined){\r\n            setImgCount(1)\r\n        }\r\n    },[img])\r\n    \r\n    const handleSubmit = () => {\r\n        let form_data = new FormData();\r\n        if(ImgCount === 1){\r\n            form_data.append('image', refImgFiles.current.files[0])\r\n        }\r\n        form_data.append('title', sendData.title);\r\n        form_data.append('content', sendData.content);\r\n        form_data.append('date', sendData.date);\r\n        form_data.append('language', sendData.language);\r\n        form_data.append('like', sendData.like);\r\n        form_data.append('username', sendData.username);\r\n        form_data.append('profileImage', sendData.profileImage)\r\n        form_data.append('user_pk', sendData.user_pk);\r\n\r\n        fetch(\"http://localhost:8000/api/Todos/\", {\r\n            method : 'POST',\r\n            headers: {\r\n                Authorization : `JWT ${localStorage.getItem('token')}`,\r\n            },\r\n            body : form_data\r\n        })\r\n        .then(res => res.json())\r\n        .catch(error => console.error('Error:', error))\r\n        .then(response => console.log('Success:', JSON.stringify(response)))\r\n        .then(history.push('/'))\r\n        .then(history.go(0));\r\n    };\r\n\r\n    useEffect(()=>{\r\n        fetch('http://localhost:8000/user/current/', {\r\n          headers: {\r\n            Authorization: `JWT ${localStorage.getItem('token')}`\r\n          }\r\n        })\r\n        .then(res => res.json())\r\n        .then(json => {\r\n          if (json.id === null || json.id === undefined) {\r\n            alert(\"로그인이 필요합니다.\")\r\n            history.push('/')\r\n        }fetch('http://localhost:8000/user/auth/profile/' + json.id + '/update/',{\r\n                method : 'PATCH',\r\n                headers: {\r\n                    Authorization: `JWT ${localStorage.getItem('token')}`\r\n                },\r\n            })\r\n            .then((res)=>res.json())\r\n            .then((userData)=> {\r\n                setUserPhoto(userData.photo)\r\n                setUser_pk(userData.user_pk)\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n              });;\r\n        }).catch(error => {\r\n            console.log(error)\r\n          });\r\n    },[userPhoto])\r\n\r\n\r\n  return (\r\n    <>\r\n    <h2>글쓰기</h2>\r\n    <Form.Control\r\n          type=\"text\"\r\n          style={titleStyle}\r\n          placeholder=\"제목을 입력하세요\"\r\n          \r\n        />\r\n\r\n    <CKEditor data=\"\"\r\n             />,\r\n             <button className=\"upButton\" onClick={()=>{\r\n                            handleEffect(handleSubmit)\r\n                            setGoback(false)\r\n                        }}>출간하기</button>\r\n    </>\r\n  )\r\n}\r\nexport default Boardwrite;"]},"metadata":{},"sourceType":"module"}