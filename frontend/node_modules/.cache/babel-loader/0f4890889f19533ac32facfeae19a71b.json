{"ast":null,"code":"// import React, { Component } from \"react\";\n// import CKEditor from \"ckeditor4-react\";\n// import Button from '@material-ui/core/Button';\n// const headers = { withCredentials: true };\n// class BoardWrite extends Component {\n//   state = {\n//     data: \"\"\n//   };\n//   componentDidMount() {\n//     if (this.props.location.query !== undefined) {\n//     }\n//   }\n//   componentWillMount(){\n//     if (this.props.location.query !== undefined) {\n//       this.setState({\n//       });\n//     }\n//   }\n//   writeBoard = () => {\n//     let url;\n//     let send_param;\n//     const boardTitle = this.boardTitle.value;\n//     const boardContent = this.state.data;\n//     if (boardTitle === undefined || boardTitle === \"\") {\n//       alert(\"글 제목을 입력 해주세요.\");\n//       boardTitle.focus();\n//       return;\n//     } else if (boardContent === undefined || boardContent === \"\") {\n//       alert(\"글 내용을 입력 해주세요.\");\n//       boardContent.focus();\n//     }\n//     if (this.props.location.query !== undefined) {\n//       url = \"http://localhost:8080/board/update\";\n//       send_param = {\n//         headers,\n//         \"title\": boardTitle,\n//         \"content\": boardContent\n//       };\n//     } else {\n//       url = \"http://localhost:8080/board/write\";\n//       send_param = {\n//         headers,\n//         \"title\": boardTitle,\n//         \"content\": boardContent\n//       };\n//     }\n//   onEditorChange = evt => {\n//     this.setState({\n//       data: evt.editor.getData()\n//     });\n//   };\n//     return (\n//       <div style={divStyle} className=\"App\">\n//         <h2>글쓰기</h2>\n//         <Button\n//           type=\"text\"\n//           style={titleStyle}\n//           placeholder=\"글 제목\"\n//           ref={ref => (this.boardTitle = ref)}\n//         />\n//         <CKEditor\n//           data={this.state.data}\n//           onChange={this.onEditorChange}\n//         ></CKEditor>\n//         <Button style={buttonStyle} onClick={this.writeBoard} block>\n//           저장하기\n//         </Button>\n//       </div>\n//     );\n//   }\n// }\n// export default BoardWrite;","map":{"version":3,"sources":["C:/django-react/frontend/src/views/Boadwrite.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { Component } from \"react\";\r\n// import CKEditor from \"ckeditor4-react\";\r\n// import Button from '@material-ui/core/Button';\r\n\r\n\r\n// const headers = { withCredentials: true };\r\n\r\n// class BoardWrite extends Component {\r\n//   state = {\r\n//     data: \"\"\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     if (this.props.location.query !== undefined) {\r\n\r\n//     }\r\n//   }\r\n\r\n//   componentWillMount(){\r\n//     if (this.props.location.query !== undefined) {\r\n//       this.setState({\r\n\r\n//       });\r\n//     }\r\n//   }\r\n\r\n//   writeBoard = () => {\r\n//     let url;\r\n//     let send_param;\r\n\r\n//     const boardTitle = this.boardTitle.value;\r\n//     const boardContent = this.state.data;\r\n\r\n//     if (boardTitle === undefined || boardTitle === \"\") {\r\n//       alert(\"글 제목을 입력 해주세요.\");\r\n//       boardTitle.focus();\r\n//       return;\r\n//     } else if (boardContent === undefined || boardContent === \"\") {\r\n//       alert(\"글 내용을 입력 해주세요.\");\r\n//       boardContent.focus();\r\n//     }\r\n    \r\n//     if (this.props.location.query !== undefined) {\r\n//       url = \"http://localhost:8080/board/update\";\r\n//       send_param = {\r\n//         headers,\r\n//         \"title\": boardTitle,\r\n//         \"content\": boardContent\r\n//       };\r\n//     } else {\r\n//       url = \"http://localhost:8080/board/write\";\r\n//       send_param = {\r\n//         headers,\r\n//         \"title\": boardTitle,\r\n//         \"content\": boardContent\r\n//       };\r\n\r\n//     }\r\n\r\n\r\n\r\n//   onEditorChange = evt => {\r\n//     this.setState({\r\n//       data: evt.editor.getData()\r\n//     });\r\n//   };\r\n\r\n\r\n//     return (\r\n//       <div style={divStyle} className=\"App\">\r\n//         <h2>글쓰기</h2>\r\n//         <Button\r\n//           type=\"text\"\r\n//           style={titleStyle}\r\n//           placeholder=\"글 제목\"\r\n//           ref={ref => (this.boardTitle = ref)}\r\n//         />\r\n//         <CKEditor\r\n//           data={this.state.data}\r\n//           onChange={this.onEditorChange}\r\n//         ></CKEditor>\r\n//         <Button style={buttonStyle} onClick={this.writeBoard} block>\r\n//           저장하기\r\n//         </Button>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default BoardWrite;"]},"metadata":{},"sourceType":"module"}